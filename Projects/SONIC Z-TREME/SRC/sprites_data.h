#ifndef _SPRITE_DATA_
#define _SPRITE_DATA_

/****
Sprites array (for rings, lifes, etc.) + gouraud shading tables
****/
SPR_ATTR sprites[]=
{
    SPR_ATTRIBUTE(0, LUTidx(0), No_Gouraud, CL16Look | ECdis | SPenb | HSSon | MESHoff | Window_In ,  sprNoflip | _ZmCC ),
    SPR_ATTRIBUTE(1, LUTidx(1), No_Gouraud, CL16Look | ECdis | SPenb | HSSon | MESHoff | Window_In ,  sprNoflip | _ZmCC ),
    SPR_ATTRIBUTE(2, LUTidx(2), No_Gouraud, CL16Look | ECdis | SPenb | HSSon | MESHoff | Window_In ,  sprNoflip | _ZmCC ),
    SPR_ATTRIBUTE(3, LUTidx(3), No_Gouraud, CL16Look | ECdis | SPenb | HSSon | MESHoff | Window_In ,  sprNoflip | _ZmCC ),
    SPR_ATTRIBUTE(4, LUTidx(4), No_Gouraud, CL16Look | ECdis | SPenb | HSSon | MESHoff | Window_In ,  sprNoflip | _ZmCC ),
    SPR_ATTRIBUTE(5, LUTidx(5), No_Gouraud, CL16Look | ECdis | SPenb | HSSon | MESHoff | Window_In ,  sprNoflip | _ZmCC ),
    SPR_ATTRIBUTE(6, LUTidx(6), No_Gouraud, CL16Look | ECdis | SPenb | HSSon | MESHoff | Window_In ,  sprNoflip | _ZmCC ),
    SPR_ATTRIBUTE(7, LUTidx(7), No_Gouraud, CL16Look | ECdis | SPenb | HSSon | MESHoff | Window_In ,  sprNoflip | _ZmCC ),
    SPR_ATTRIBUTE(8, LUTidx(8), No_Gouraud, CL16Look | ECdis | SPenb | HSSon | MESHoff | Window_In ,  sprNoflip | _ZmCC ),
    SPR_ATTRIBUTE(9, LUTidx(9), No_Gouraud, CL16Look | ECdis | SPenb | HSSon | MESHoff | Window_In ,  sprNoflip | _ZmCC ),
    SPR_ATTRIBUTE(10, LUTidx(10), No_Gouraud, CL16Look | ECdis | SPenb | HSSon | MESHoff | Window_In ,  sprNoflip | _ZmCC ),
    SPR_ATTRIBUTE(11, LUTidx(11), No_Gouraud, CL16Look | ECdis | SPenb | HSSon | MESHoff | Window_In ,  sprNoflip | _ZmCC ),
    SPR_ATTRIBUTE(12, LUTidx(12), No_Gouraud, CL16Look | ECdis | SPenb | HSSon | MESHoff | Window_In ,  sprNoflip | _ZmCC ),
    SPR_ATTRIBUTE(13, LUTidx(13), No_Gouraud, CL16Look | ECdis | SPenb | HSSon | MESHoff | Window_In ,  sprNoflip | _ZmCC ),
    SPR_ATTRIBUTE(14, LUTidx(14), No_Gouraud, CL16Look | ECdis | SPenb | HSSon | MESHoff | Window_In ,  sprNoflip | _ZmCC ),
    SPR_ATTRIBUTE(15, LUTidx(15), No_Gouraud, CL16Look | ECdis | SPenb | HSSon | MESHoff | Window_In ,  sprNoflip | _ZmCC ),
    SPR_ATTRIBUTE(16, LUTidx(16), No_Gouraud, CL16Look | ECdis | SPenb | HSSon | MESHoff | Window_In ,  sprNoflip | _ZmCC ),
    SPR_ATTRIBUTE(17, LUTidx(17), No_Gouraud, CL16Look | ECdis | SPenb | HSSon | (1<<11) | MESHoff | Window_In ,  sprNoflip | _ZmCC ),
    SPR_ATTRIBUTE(18, LUTidx(18), No_Gouraud, CL16Look | ECdis | SPenb | HSSon | MESHoff | Window_In ,  sprNoflip | _ZmCC ),
    SPR_ATTRIBUTE(19, LUTidx(19), No_Gouraud, CL16Look | ECdis | SPenb | HSSon | MESHoff | Window_In ,  sprNoflip | _ZmCC ),

    SPR_ATTRIBUTE(28, LUTidx(28), No_Gouraud, CL16Look | ECdis | SPenb | HSSon | (1<<11) | MESHon | Window_In ,  sprNoflip | _ZmCC ),
    SPR_ATTRIBUTE(17, LUTidx(17), No_Gouraud, CL16Look | ECdis | SPenb | HSSon | (1<<11) | MESHon | Window_In ,  sprNoflip | _ZmCC ),
	
    SPR_ATTRIBUTE(30, LUTidx(30), No_Gouraud, CL16Look | ECdis | SPenb | HSSon | MESHoff | Window_In ,  sprNoflip | _ZmCC ),
    SPR_ATTRIBUTE(31, LUTidx(31), No_Gouraud, CL16Look | ECdis | SPenb | HSSon | MESHoff | Window_In ,  sprNoflip | _ZmCC ),
    SPR_ATTRIBUTE(32, LUTidx(32), No_Gouraud, CL16Look | ECdis | SPenb | HSSon | MESHoff | Window_In ,  sprNoflip | _ZmCC ),
    SPR_ATTRIBUTE(33, LUTidx(33), No_Gouraud, CL16Look | ECdis | SPenb | HSSon | MESHoff | Window_In ,  sprNoflip | _ZmCC ),
    SPR_ATTRIBUTE(34, LUTidx(34), No_Gouraud, CL16Look | ECdis | SPenb | HSSon | MESHoff | Window_In ,  sprNoflip | _ZmCC ),
    SPR_ATTRIBUTE(35, LUTidx(35), No_Gouraud, CL16Look | ECdis | SPenb | HSSon | MESHoff | Window_In ,  sprNoflip | _ZmCC ),
    SPR_ATTRIBUTE(36, LUTidx(36), No_Gouraud, CL16Look | ECdis | SPenb | HSSon | MESHoff | Window_In ,  sprNoflip | _ZmCC ),
    SPR_ATTRIBUTE(37, LUTidx(37), No_Gouraud, CL16Look | ECdis | SPenb | HSSon | MESHoff | Window_In ,  sprNoflip | _ZmCC ),
    SPR_ATTRIBUTE(38, LUTidx(38), No_Gouraud, CL16Look | ECdis | SPenb | HSSon | MESHoff | Window_In ,  sprNoflip | _ZmCC ),
    SPR_ATTRIBUTE(39, LUTidx(39), No_Gouraud, CL16Look | ECdis | SPenb | HSSon | MESHoff | Window_In ,  sprNoflip | _ZmCC ),
    SPR_ATTRIBUTE(40, LUTidx(40), No_Gouraud, CL16Look | ECdis | SPenb | HSSon | MESHoff | Window_In ,  sprNoflip | _ZmCC ),
    SPR_ATTRIBUTE(41, LUTidx(41), No_Gouraud, CL16Look | ECdis | SPenb | HSSon | MESHoff | Window_In ,  sprNoflip | _ZmCC ),
};


Uint16	MetalGrd[32] = {
	GRTBL(  0, 16, 16 ),
	GRTBL(  1, 16, 16 ),
	GRTBL(  2, 16, 16 ),
	GRTBL(  3, 16, 16 ),
	GRTBL(  4, 16, 16 ),
	GRTBL(  5, 16, 16 ),
	GRTBL(  6, 16, 16 ),
	GRTBL(  7, 16, 16 ),
	GRTBL(  8, 16, 16 ),
	GRTBL(  9, 16, 16 ),
	GRTBL( 10, 16, 16 ),
	GRTBL( 11, 16, 16 ),
	GRTBL( 12, 16, 16 ),
	GRTBL( 13, 16, 16 ),
	GRTBL( 14, 16, 16 ),
	GRTBL( 15, 16, 16 ),
	GRTBL( 16, 16, 16 ),
	GRTBL( 17, 16, 16 ),
	GRTBL( 18, 16, 16 ),
	GRTBL( 19, 16, 16 ),
	GRTBL( 20, 16, 16 ),
	GRTBL( 21, 16, 16 ),
	GRTBL( 22, 16, 16 ),
	GRTBL( 23, 16, 16 ),
	GRTBL( 24, 16, 16 ),
	GRTBL( 25, 16, 16 ),
	GRTBL( 26, 16, 16 ),
	GRTBL( 27, 16, 16 ),
	GRTBL( 28, 16, 16 ),
	GRTBL( 29, 16, 16 ),
	GRTBL( 30, 16, 16 ),
	GRTBL( 31, 16, 16 ),
};

Uint16	MetalGrd2[32] = {
	GRTBL(  0, 14, 16 ),
	GRTBL(  1, 14, 16 ),
	GRTBL(  2, 14, 16 ),
	GRTBL(  3, 14, 16 ),
	GRTBL(  4, 14, 16 ),
	GRTBL(  5, 14, 16 ),
	GRTBL(  6, 14, 16 ),
	GRTBL(  7, 14, 16 ),
	GRTBL(  8, 14, 16 ),
	GRTBL(  9, 14, 16 ),
	GRTBL( 10, 14, 16 ),
	GRTBL( 11, 14, 16 ),
	GRTBL( 12, 14, 16 ),
	GRTBL( 13, 14, 16 ),
	GRTBL( 14, 14, 16 ),
	GRTBL( 15, 14, 16 ),
	GRTBL( 16, 14, 16 ),
	GRTBL( 17, 14, 16 ),
	GRTBL( 18, 14, 16 ),
	GRTBL( 19, 14, 16 ),
	GRTBL( 20, 14, 16 ),
	GRTBL( 21, 14, 16 ),
	GRTBL( 22, 14, 16 ),
	GRTBL( 23, 14, 16 ),
	GRTBL( 24, 14, 16 ),
	GRTBL( 25, 14, 16 ),
	GRTBL( 26, 14, 16 ),
	GRTBL( 27, 14, 16 ),
	GRTBL( 28, 14, 16 ),
	GRTBL( 29, 14, 16 ),
	GRTBL( 30, 14, 16 ),
	GRTBL( 31, 14, 16 ),
	/*GRTBL(  0, 9, 16 ),
	GRTBL(  1, 9, 16 ),
	GRTBL(  2, 9, 16 ),
	GRTBL(  3, 9, 16 ),
	GRTBL(  4, 9, 16 ),
	GRTBL(  5, 9, 16 ),
	GRTBL(  6, 9, 16 ),
	GRTBL(  7, 9, 16 ),
	GRTBL(  8, 9, 16 ),
	GRTBL(  9, 9, 16 ),
	GRTBL( 10, 9, 16 ),
	GRTBL( 11, 9, 16 ),
	GRTBL( 12, 9, 16 ),
	GRTBL( 13, 9, 16 ),
	GRTBL( 14, 9, 16 ),
	GRTBL( 15, 9, 16 ),
	GRTBL( 16, 9, 16 ),
	GRTBL( 17, 9, 16 ),
	GRTBL( 18, 9, 16 ),
	GRTBL( 19, 9, 16 ),
	GRTBL( 20, 9, 16 ),
	GRTBL( 21, 9, 16 ),
	GRTBL( 22, 9, 16 ),
	GRTBL( 23, 9, 16 ),
	GRTBL( 24, 9, 16 ),
	GRTBL( 25, 9, 16 ),
	GRTBL( 26, 9, 16 ),
	GRTBL( 27, 9, 16 ),
	GRTBL( 28, 9, 16 ),
	GRTBL( 29, 9, 16 ),
	GRTBL( 30, 9, 16 ),
	GRTBL( 31, 9, 16 ),*/
};
#endif // _SPRITE_DATA_
